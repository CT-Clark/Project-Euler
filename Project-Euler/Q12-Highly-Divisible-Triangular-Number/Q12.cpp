/*
The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

     1: 1
     3: 1,3
     6: 1,2,3,6
    10: 1,2,5,10
    15: 1,3,5,15
    21: 1,3,7,21
    28: 1,2,4,7,14,28

We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?
*/

#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include <iostream>
using namespace std;

int main() {
  cout << "Program starting...";

  char found = 0;
  uint64_t i = 1;
  uint64_t index = 1;
  uint32_t maxCount = 0;


  while (found == 0) {
    // Find factors of i
    uint32_t count = 1;

    i = 0;

    for (uint64_t k = 1; k <= index; k++) {
      i += k;
    }

    if ((i % 2) == 0) {
      for (uint64_t j = 1; j <= i/2; j++) {
        if ((i % j) == 0) {
          count++;
        }
      }
    }

    if (count > maxCount) {
      maxCount = count;
      //cout << "\n=========================================================================================";
      cout << "\n\n" << maxCount << " Factors of " << i << " <================================================\n";
      //cout << "\n=========================================================================================";
    }
    if (count > 500) {
      cout << "\nTriangular number w/ < 501 factors: " << i << "\n";
      found = 1;
    }

    //cout << "\n" << i << " Triangular Number: " << index;
    index++;
  }

  return 0;
}
