/*
Consider all integer combinations of ab for 2 ≤ a ≤ 5 and 2 ≤ b ≤ 5:

    2**2=4, 2**3=8, 2**4=16, 2**5=32
    3**2=9, 3**3=27, 3**4=81, 3**5=243
    4**2=16, 4**3=64, 4**4=256, 4**5=1024
    5**2=25, 5**3=125, 5**4=625, 5**5=3125

If they are then placed in numerical order, with any repeats removed, we get the following sequence of 15 distinct terms:

4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125

How many distinct terms are in the sequence generated by a**b for 2 ≤ a ≤ 100 and 2 ≤ b ≤ 100?
*/

import java.util.*;
import java.math.*;

public class Q29 {
  public static void main(String[] args) {
    ArrayList<BigInteger> distinctTerms = new ArrayList<BigInteger>(); // List of all the distinct terms
    BigInteger a = new BigInteger("2");
    BigInteger b = new BigInteger("2");
    BigInteger increment = new BigInteger("1");
    BigInteger product = new BigInteger("1");

    for (a = new BigInteger("2"); a.intValue() <= 100; a = a.add(increment)) {
      for (b = new BigInteger("2"); b.intValue() <= 100; b = b.add(increment)) {
        product = new BigInteger((a.pow(b.intValue()).toString()));

        // If the term isn't in the list already, add it
        if (distinctTerms.contains(product) == false) {
          distinctTerms.add(product);
        }
      }
    }

    // System.out.println(distinctTerms); // Enable if you want to see the entire list (LONG)
    System.out.println(distinctTerms.size());
  }
}
